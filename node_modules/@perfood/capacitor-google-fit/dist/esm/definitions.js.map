{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export interface GoogleFitPlugin {\n  /**\n   * Connect to Google Fit\n   * @returns {Promise}\n   * @resolve any\n   */\n  connectToGoogleFit(): Promise<void>;\n\n  /**\n   * Returns wether the permissions are ok or not\n   * @returns {Promise}\n   * @resolve AllowedResult\n   */\n  isAllowed(): Promise<AllowedResult>;\n\n  /**\n   * Get history\n   * @returns {Promise}\n   * @resolve AccountData\n   */\n  getHistory(call: QueryInput): Promise<DayContainer>;\n\n  /**\n   * Get history activity\n   * @returns {Promise}\n   * @resolve AccountData\n   */\n  getHistoryActivity(call: QueryInput): Promise<ActivityContainer>;\n}\n\nexport interface PermissionData {\n  allowed: boolean;\n}\n\nexport interface QueryInput {\n  startTime: Date;\n  endTime: Date;\n}\n\nexport interface ActivityContainer {\n  activities: HistoryActivityData[];\n}\n\nexport interface DayContainer {\n  days: HistoryData[];\n}\n\nexport interface HistoryData {\n  start: string;\n  end: string;\n  /**\n  Distance travelled in meters.\n  Valid range: 0â€”100 meters per second\n   */\n  distance: string;\n  /**meters per second */\n  speed: string;\n  /*\n  This data type captures the total calories (in kilocalories) burned by the user, including calories burned at rest (BMR or Basalrate)!\n  */\n  calories: string;\n}\n\nexport interface HistoryActivityData {\n  start: string;\n  end: string;\n  distance?: string;\n  speed?: string;\n  calories?: string;\n  activity?: string;\n  weight?: string;\n  steps?: string;\n}\n\nexport interface AllowedResult {\n  allowed: boolean;\n}\n"]}